import streamlit as st
from datetime import datetime
import random

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Canteen-X –ß–∞—Ç",
    page_icon="ü§ñ",
    layout="centered"
)

class SmartBot:
    def __init__(self):
        self.conversation_history = []
        
    def get_response(self, user_message):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        self.conversation_history.append(user_message)
        if len(self.conversation_history) > 6:
            self.conversation_history.pop(0)
        
        user_lower = user_message.lower()
        
        # –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        responses = {
            '–ø—Ä–∏–≤–µ—Ç': [
                "–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –ú–æ–∂–µ—Ç, –∑–∞–∫–∞–∑ –µ–¥—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞–µ–º?",
                "–ü—Ä–∏–≤–µ—Ç–∏–∫! üéâ –ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é –∏ –∑–∞–∫–∞–∑–∞–º!"
            ],
            '–∫–∞–∫ –¥–µ–ª–∞': [
                "–û—Ç–ª–∏—á–Ω–æ! –û—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Å –∫–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—å! üòÑ –ê —É —Ç–µ–±—è –∫–∞–∫?",
                "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å —Å –∑–∞–∫–∞–∑–∞–º–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!",
                "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢–µ–º –±–æ–ª–µ–µ —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å! üòä"
            ],
            '—á—Ç–æ –¥–µ–ª–∞–µ—à—å': [
                "–û–±—â–∞—é—Å—å —Å —Ç–æ–±–æ–π! ü§ñ –≠—Ç–æ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ!",
                "–ü–æ–º–æ–≥–∞—é –∫–ª–∏–µ–Ω—Ç–∞–º Canteen-X –∏ –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!",
                "–ñ–¥—É —Ç–≤–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–±–æ–ª—Ç–∞—Ç—å! üòÑ"
            ],
            '–º–µ–Ω—é': [
                "üçï **–ü–∏—Ü—Ü–∞:** –ú–∞—Ä–≥–∞—Ä–∏—Ç–∞ (350—Ä), –ü–µ–ø–ø–µ—Ä–æ–Ω–∏ (380—Ä), –ì–∞–≤–∞–π—Å–∫–∞—è (370—Ä)\n"
                "üçî **–ë—É—Ä–≥–µ—Ä—ã:** –ö–ª–∞—Å—Å–∏–∫ (280—Ä), –ß–∏–∑–±—É—Ä–≥–µ—Ä (300—Ä), –í–µ–≥–µ—Ç–∞—Ä–∏–∞–Ω—Å–∫–∏–π (260—Ä)\n" 
                "ü•ó **–°–∞–ª–∞—Ç—ã:** –¶–µ–∑–∞—Ä—å (220—Ä), –ì—Ä–µ—á–µ—Å–∫–∏–π (200—Ä), –û–ª–∏–≤—å–µ (180—Ä)\n"
                "üçù **–ü–∞—Å—Ç–∞:** –ö–∞—Ä–±–æ–Ω–∞—Ä–∞ (320—Ä), –ë–æ–ª–æ–Ω—å–µ–∑–µ (340—Ä), –ê–ª—å—Ñ—Ä–µ–¥–æ (310—Ä)\n"
                "ü•§ **–ù–∞–ø–∏—Ç–∫–∏:** –ö–æ–ª–∞ (100—Ä), –°–æ–∫ (120—Ä), –ö–æ—Ñ–µ (150—Ä), –ß–∞–π (80—Ä)\n\n"
                "–ß—Ç–æ —Ç–µ–±–µ –ø–æ –¥—É—à–µ? üòã"
            ],
            '–∑–∞–∫–∞–∑': [
                "–û—Ç–ª–∏—á–Ω–æ! üéØ –î–∞–≤–∞–π –æ—Ñ–æ—Ä–º–∏–º –∑–∞–∫–∞–∑! –ß—Ç–æ –±—ã —Ç—ã —Ö–æ—Ç–µ–ª?",
                "–°—É–ø–µ—Ä! –í—ã–±–∏—Ä–∞–π –∏–∑ –º–µ–Ω—é –∏ —è –ø–æ–º–æ–≥—É —Å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º! üçï"
            ],
            '–¥–æ—Å—Ç–∞–≤–∫–∞': [
                "üöó –î–æ—Å—Ç–∞–≤–ª—è–µ–º –±–µ—Å–ø–ª–∞—Ç–Ω–æ –ø–æ –∫–∞–º–ø—É—Å—É! –ó–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ - 100 —Ä—É–±.",
                "üöó –ü—Ä–∏–≤–µ–∑–µ–º –∑–∞–∫–∞–∑ –∫—É–¥–∞ —É–¥–æ–±–Ω–æ! –ü–æ –∫–∞–º–ø—É—Å—É - –±–µ—Å–ø–ª–∞—Ç–Ω–æ!"
            ],
            '–≤—Ä–µ–º—è': [
                "üïí –†–∞–±–æ—Ç–∞–µ–º: –ü–Ω-–ü—Ç 8:00-20:00, –°–±-–í—Å 9:00-18:00",
                "üïí –í—Å–µ–≥–¥–∞ —Ä–∞–¥—ã —Å –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫–∞ –ø–æ –≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ!"
            ],
            '–æ–ø–ª–∞—Ç–∞': [
                "üí≥ –ü—Ä–∏–Ω–∏–º–∞–µ–º: –∫–∞—Ä—Ç—ã, Apple Pay/Google Pay, –Ω–∞–ª–∏—á–Ω—ã–µ",
                "üí≥ –û–ø–ª–∞—á–∏–≤–∞–π –∫–∞–∫ —É–¥–æ–±–Ω–æ - –∫–∞—Ä—Ç–æ–π, —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º –∏–ª–∏ –Ω–∞–ª–∏—á–∫–æ–π!"
            ],
            '—Å–ø–∞—Å–∏–±–æ': [
                "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å!",
                "–ù–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏! –û–±—Ä–∞—â–∞–π—Å—è –µ—â–µ! üé©",
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçï"
            ],
            '–ø–æ–∫–∞': [
                "–î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã –ë—É–¥—É —Å–∫—É—á–∞—Ç—å!",
                "–ü–æ–∫–∞-–ø–æ–∫–∞! üçï –ó–∞—Ö–æ–¥–∏ –µ—â–µ –ø–æ–±–æ–ª—Ç–∞—Ç—å!",
                "–î–æ —Å–∫–æ—Ä–æ–≥–æ! –ñ–¥—É —Ç–≤–æ–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è! üòä"
            ],
            '—à—É—Ç–∫–∞': [
                "–ü–æ—á–µ–º—É –ø–∏—Ü—Ü–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç –æ–¥–Ω–∞? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∞ –≤—Å–µ–≥–¥–∞ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —Å—ã—Ä–∞! üçïüòÑ",
                "–ö–∞–∫–æ–π —Å–∞–ª–∞—Ç —Å–∞–º—ã–π —É–º–Ω—ã–π? –°–∞–ª–∞—Ç-–¶–µ–∑–∞—Ä—å - —É –Ω–µ–≥–æ –µ—Å—Ç—å —Å–≤–æ–∏ –∑–∞–∫–æ–Ω—ã! ü•ó",
                "–ü–æ—á–µ–º—É –±—É—Ä–≥–µ—Ä –ø–æ—à–µ–ª –≤ —à–∫–æ–ª—É? –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ! üçî"
            ]
        }
        
        # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
        for key, answer_list in responses.items():
            if key in user_lower:
                return random.choice(answer_list)
        
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        universal_responses = [
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ? üòä",
            "–•–º, —Ö–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –ß—Ç–æ –¥—É–º–∞–µ—à—å —Å–∞–º? üí≠",
            "–î–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —ç—Ç–æ! –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î",
            "–õ—é–±–æ–ø—ã—Ç–Ω–æ! –ê —á—Ç–æ –¥–ª—è —Ç–µ–±—è —ç—Ç–æ –∑–Ω–∞—á–∏—Ç? üòÑ",
            "–û—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º? üéâ"
        ]
        
        return random.choice(universal_responses)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    if 'bot' not in st.session_state:
        st.session_state.bot = SmartBot()
    
    # –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
    if 'messages' not in st.session_state:
        st.session_state.messages = []
        st.session_state.messages.append({
            "role": "bot", 
            "content": "–ü—Ä–∏–≤–µ—Ç! –Ø –ì—Ä–∏–≥–æ—Ä–∏–π ü§ñ\n–£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Canteen-X! –ú–æ–∂–µ–º:\n‚Ä¢ –ó–∞–∫–∞–∑—ã–≤–∞—Ç—å –µ–¥—É üçï\n‚Ä¢ –û–±—â–∞—Ç—å—Å—è –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã üí¨\n‚Ä¢ –®—É—Ç–∏—Ç—å –∏ –±–æ–ª—Ç–∞—Ç—å üòÑ\n–ß—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å?",
            "time": datetime.now().strftime("%H:%M")
        })
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    col1, col2 = st.columns([3, 1])
    with col1:
        st.title("Canteen-X üí¨")
        st.subheader("–£–º–Ω—ã–π —á–∞—Ç —Å –ì—Ä–∏–≥–æ—Ä–∏–µ–º")
        st.caption("üöÄ –ë—ã—Å—Ç—Ä–æ, —É–º–Ω–æ, –±–µ–∑ –æ—à–∏–±–æ–∫!")
    with col2:
        st.markdown("<div style='text-align: center; font-size: 50px'>ü§ñ</div>", unsafe_allow_html=True)
    
    st.success("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –û–±—â–∞–π—Ç–µ—Å—å –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã!")
    
    # –ß–∞—Ç
    st.markdown("---")
    chat_container = st.container()
    
    with chat_container:
        for msg in st.session_state.messages:
            if msg["role"] == "user":
                st.markdown(f"""
                <div style='display: flex; justify-content: flex-end; margin-bottom: 15px;'>
                    <div style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 12px 16px; border-radius: 18px 18px 0 18px; margin: 8px 0; max-width: 80%;'>
                        {msg["content"]}
                        <div style='font-size: 0.8em; color: rgba(255,255,255,0.8); margin-top: 4px;'>{msg["time"]}</div>
                    </div>
                </div>
                """, unsafe_allow_html=True)
            else:
                st.markdown(f"""
                <div style='display: flex; justify-content: flex-start; margin-bottom: 15px;'>
                    <div style='background: #f1f3f4; color: #333; padding: 12px 16px; border-radius: 18px 18px 18px 0; margin: 8px 0; max-width: 80%;'>
                        {msg["content"]}
                        <div style='font-size: 0.8em; color: #666; margin-top: 4px;'>{msg["time"]}</div>
                    </div>
                </div>
                """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    # –í–≤–æ–¥ —Å Enter
    with st.form(key='chat_form', clear_on_submit=True):
        user_input = st.text_input(
            "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –æ –µ–¥–µ, –ø–æ–±–æ–ª—Ç–∞–π—Ç–µ, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å...",
            label_visibility="collapsed"
        )
        submit_button = st.form_submit_button(label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚û§')
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞
    if submit_button and user_input.strip():
        st.session_state.messages.append({
            "role": "user",
            "content": user_input,
            "time": datetime.now().strftime("%H:%M")
        })
        
        # –ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        bot_response = st.session_state.bot.get_response(user_input)
        
        st.session_state.messages.append({
            "role": "bot", 
            "content": bot_response,
            "time": datetime.now().strftime("%H:%M")
        })
        
        st.rerun()
    
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
    st.markdown("**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:**")
    cols = st.columns(2)
    topics = [
        ("üçï –ü—Ä–æ –µ–¥—É", "–ß—Ç–æ –≤ –º–µ–Ω—é?"),
        ("üòä –ö–∞–∫ –¥–µ–ª–∞?", "–ö–∞–∫ —Ç–≤–æ–∏ –¥–µ–ª–∞?"),
        ("üé≠ –®—É—Ç–∫–∞", "–†–∞—Å—Å–∫–∞–∂–∏ —à—É—Ç–∫—É"),
        ("üí¨ –ü–æ–±–æ–ª—Ç–∞—Ç—å", "–ß—Ç–æ –¥–µ–ª–∞–µ—à—å?"),
        ("üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "–î–æ —Å–∫–æ–ª—å–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?"),
        ("üöó –î–æ—Å—Ç–∞–≤–∫–∞", "–ï—Å—Ç—å –¥–æ—Å—Ç–∞–≤–∫–∞?")
    ]
    
    for i, (btn_text, message) in enumerate(topics):
        with cols[i % 2]:
            if st.button(btn_text, use_container_width=True, key=f"btn_{i}"):
                st.session_state.messages.append({
                    "role": "user",
                    "content": message,
                    "time": datetime.now().strftime("%H:%M")
                })
                
                bot_response = st.session_state.bot.get_response(message)
                
                st.session_state.messages.append({
                    "role": "bot",
                    "content": bot_response,
                    "time": datetime.now().strftime("%H:%M")
                })
                
                st.rerun()
    
    # –û—á–∏—Å—Ç–∫–∞
    if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", use_container_width=True):
        st.session_state.messages = []
        st.session_state.bot.conversation_history = []
        st.session_state.messages.append({
            "role": "bot",
            "content": "–ß–∞—Ç –æ—á–∏—â–µ–Ω! –°–ø—Ä–∞—à–∏–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ! –Ø –≥–æ—Ç–æ–≤! üéâ",
            "time": datetime.now().strftime("%H:%M")
        })
        st.rerun()

if __name__ == "__main__":
    main()
