import streamlit as st
from datetime import datetime
import random
import time

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="Canteen-X –ß–∞—Ç",
    page_icon="ü§ñ",
    layout="centered",
    initial_sidebar_state="collapsed"
)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ç–µ–º—ã –î–û –≤—Å–µ—Ö —Ñ—É–Ω–∫—Ü–∏–π
if 'dark_theme' not in st.session_state:
    st.session_state.dark_theme = False

class SmartBot:
    def __init__(self):
        self.conversation_history = []
        
    def get_response(self, user_message):
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é
        self.conversation_history.append({"role": "user", "content": user_message})
        if len(self.conversation_history) > 10:
            self.conversation_history.pop(0)
        
        user_lower = user_message.lower()
        
        # –£–º–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        responses = {
            '–ø—Ä–∏–≤–µ—Ç': [
                "–ü—Ä–∏–≤–µ—Ç! üëã –†–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ö–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ?",
                "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π! üòä –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å? –ú–æ–∂–µ—Ç, –∑–∞–∫–∞–∑ –µ–¥—ã –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–±–æ–ª—Ç–∞–µ–º?",
                "–ü—Ä–∏–≤–µ—Ç–∏–∫! üéâ –ì–æ—Ç–æ–≤ –∫ –æ–±—â–µ–Ω–∏—é –∏ –∑–∞–∫–∞–∑–∞–º!"
            ],
            '–∫–∞–∫ –¥–µ–ª–∞': [
                "–û—Ç–ª–∏—á–Ω–æ! –û—Å–æ–±–µ–Ω–Ω–æ –∫–æ–≥–¥–∞ –µ—Å—Ç—å —Å –∫–µ–º –ø–æ–±–æ–ª—Ç–∞—Ç—å! üòÑ –ê —É —Ç–µ–±—è –∫–∞–∫?",
                "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! –ì–æ—Ç–æ–≤ –ø–æ–º–æ–≥–∞—Ç—å —Å –∑–∞–∫–∞–∑–∞–º–∏ –∏ –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!",
                "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–æ! –¢–µ–º –±–æ–ª–µ–µ —á—Ç–æ —Ç—ã –∑–¥–µ—Å—å! üòä"
            ],
            '—á—Ç–æ –¥–µ–ª–∞–µ—à—å': [
                "–û–±—â–∞—é—Å—å —Å —Ç–æ–±–æ–π! ü§ñ –≠—Ç–æ —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ –∑–∞–Ω—è—Ç–∏–µ!",
                "–ü–æ–º–æ–≥–∞—é –∫–ª–∏–µ–Ω—Ç–∞–º Canteen-X –∏ –æ—Ç–≤–µ—á–∞—é –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã!",
                "–ñ–¥—É —Ç–≤–æ–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π! –í—Å–µ–≥–¥–∞ —Ä–∞–¥ –ø–æ–±–æ–ª—Ç–∞—Ç—å! üòÑ"
            ],
            '–º–µ–Ω—é': "üìã **–í–Ω–∏–º–∞–Ω–∏–µ!** –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –º–µ–Ω—é –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞!",
            '–∑–∞–∫–∞–∑': "üõí **–í–Ω–∏–º–∞–Ω–∏–µ!** –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã –æ–Ω–ª–∞–π–Ω!",
            '–¥–æ—Å—Ç–∞–≤–∫–∞': "üöö **–í–Ω–∏–º–∞–Ω–∏–µ!** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ—Å—Ç–∞–≤–∫–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –ú—ã –æ–±–Ω–æ–≤–ª—è–µ–º –∑–æ–Ω—ã –¥–æ—Å—Ç–∞–≤–∫–∏!",
            '–≤—Ä–µ–º—è': "‚è∞ **–í–Ω–∏–º–∞–Ω–∏–µ!** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞–±–æ—Ç—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞. –í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã!",
            '–æ–ø–ª–∞—Ç–∞': "üí≥ **–í–Ω–∏–º–∞–Ω–∏–µ!** –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ø–æ—Å–æ–±–∞—Ö –æ–ø–ª–∞—Ç—ã –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è. –°–∫–æ—Ä–æ –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –Ω–æ–≤—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã!",
            '—Å–ø–∞—Å–∏–±–æ': [
                "–í—Å–µ–≥–¥–∞ –ø–æ–∂–∞–ª—É–π—Å—Ç–∞! üòä –†–∞–¥ –±—ã–ª –ø–æ–º–æ—á—å!",
                "–ù–µ –±–ª–∞–≥–æ–¥–∞—Ä–∏! –û–±—Ä–∞—â–∞–π—Å—è –µ—â–µ! üé©",
                "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞! –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –∞–ø–ø–µ—Ç–∏—Ç–∞! üçï"
            ],
            '–ø–æ–∫–∞': [
                "–î–æ –≤—Å—Ç—Ä–µ—á–∏! üëã –ë—É–¥—É —Å–∫—É—á–∞—Ç—å!",
                "–ü–æ–∫–∞-–ø–æ–∫–∞! üçï –ó–∞—Ö–æ–¥–∏ –µ—â–µ –ø–æ–±–æ–ª—Ç–∞—Ç—å!",
                "–î–æ —Å–∫–æ—Ä–æ–≥–æ! –ñ–¥—É —Ç–≤–æ–µ–≥–æ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è! üòä"
            ],
            '—à—É—Ç–∫–∞': [
                "–ü–æ—á–µ–º—É –ø–∏—Ü—Ü–∞ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—ã–≤–∞–µ—Ç –æ–¥–Ω–∞? –ü–æ—Ç–æ–º—É —á—Ç–æ –æ–Ω–∞ –≤—Å–µ–≥–¥–∞ –≤ –∫–æ–º–ø–∞–Ω–∏–∏ —Å—ã—Ä–∞! üçïüòÑ",
                "–ö–∞–∫–æ–π —Å–∞–ª–∞—Ç —Å–∞–º—ã–π —É–º–Ω—ã–π? –°–∞–ª–∞—Ç-–¶–µ–∑–∞—Ä—å - —É –Ω–µ–≥–æ –µ—Å—Ç—å —Å–≤–æ–∏ –∑–∞–∫–æ–Ω—ã! ü•ó",
                "–ü–æ—á–µ–º—É –±—É—Ä–≥–µ—Ä –ø–æ—à–µ–ª –≤ —à–∫–æ–ª—É? –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—ã—Å—à–µ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ! üçî"
            ]
        }
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫–∞–∑–∞ –µ–¥—ã
        if any(word in user_lower for word in ['—Ö–æ—á—É', '–∑–∞–∫–∞–∂–∏', '–∑–∞–∫–∞–∑–∞—Ç—å', '–º–Ω–µ –±—ã']):
            if any(food in user_lower for food in ['–ø–∏—Ü—Ü', '–±—É—Ä–≥–µ—Ä', '—Å–∞–ª–∞—Ç', '–ø–∞—Å—Ç', '–Ω–∞–ø–∏—Ç–∫']):
                return "üõí **–í–Ω–∏–º–∞–Ω–∏–µ!** –°–∏—Å—Ç–µ–º–∞ –∑–∞–∫–∞–∑–æ–≤ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –°–∫–æ—Ä–æ –≤—ã —Å–º–æ–∂–µ—Ç–µ –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã –æ–Ω–ª–∞–π–Ω!"
        
        # –ò—â–µ–º –ø–æ–¥—Ö–æ–¥—è—â–∏–π –æ—Ç–≤–µ—Ç
        for key, answer_list in responses.items():
            if key in user_lower:
                if isinstance(answer_list, list):
                    return random.choice(answer_list)
                else:
                    return answer_list
        
        # –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –µ–¥–µ
        food_keywords = {
            '–ø–∏—Ü—Ü': "üçï –ü–∏—Ü—Ü–∞ —É –Ω–∞—Å —Å–≤–µ–∂–∞—è, –≥–æ—Ç–æ–≤–∏—Ç—Å—è 15 –º–∏–Ω—É—Ç! –ù–æ –º–µ–Ω—é –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!",
            '–±—É—Ä–≥–µ—Ä': "üçî –ë—É—Ä–≥–µ—Ä—ã —Å–æ—á–Ω—ã–µ —Å –¥–æ–º–∞—à–Ω–µ–π –±—É–ª–æ—á–∫–æ–π! –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω!",
            '—Å–∞–ª–∞—Ç': "ü•ó –°–∞–ª–∞—Ç—ã —Å–≤–µ–∂–∏–µ, –∑–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –ø–æ–¥–∞—á–µ–π! –û–±–Ω–æ–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç—ã!",
            '–ø–∞—Å—Ç': "üçù –ü–∞—Å—Ç–∞ —Å –¥–æ–º–∞—à–Ω–∏–º —Å–æ—É—Å–æ–º! –°–∫–æ—Ä–æ –≤–µ—Ä–Ω–µ–º—Å—è —Å –Ω–æ–≤—ã–º–∏ –≤–∞—Ä–∏–∞–Ω—Ç–∞–º–∏!",
            '–Ω–∞–ø–∏—Ç–∫': "ü•§ –ù–∞–ø–∏—Ç–∫–∏ –æ—Ö–ª–∞–∂–¥–µ–Ω–Ω—ã–µ! –ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω!"
        }
        
        for keyword, response in food_keywords.items():
            if keyword in user_lower:
                return response
        
        # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è –ª—é–±—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        universal_responses = [
            "–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –†–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ? üòä",
            "–•–º, —Ö–æ—Ä–æ—à–∏–π –≤–æ–ø—Ä–æ—Å! –ß—Ç–æ –¥—É–º–∞–µ—à—å —Å–∞–º? üí≠",
            "–î–∞–≤–∞–π –æ–±—Å—É–¥–∏–º —ç—Ç–æ! –ß—Ç–æ —Ç–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç? ü§î",
            "–õ—é–±–æ–ø—ã—Ç–Ω–æ! –ê —á—Ç–æ –¥–ª—è —Ç–µ–±—è —ç—Ç–æ –∑–Ω–∞—á–∏—Ç? üòÑ",
            "–û—Ç–ª–∏—á–Ω–∞—è —Ç–µ–º–∞ –¥–ª—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞! –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º? üéâ",
            "–Ø –ø–æ–∫–∞ —É—á—É—Å—å –ø–æ–Ω–∏–º–∞—Ç—å —Ç–∞–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã! –ú–æ–∂–µ—Ç, —Å–ø—Ä–æ—Å–∏—à—å –æ –µ–¥–µ –∏–ª–∏ –º–µ–Ω—é? üçï"
        ]
        
        return random.choice(universal_responses)

def setup_theme():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç —Ç–µ–º—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    
    # CSS –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
    if st.session_state.dark_theme:
        st.markdown("""
        <style>
        /* –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–æ–Ω */
        .stApp {
            background-color: #0E1117;
            color: white;
        }
        
        /* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
        h1, h2, h3, h4, h5, h6 {
            color: white !important;
        }
        
        /* –¢–µ–∫—Å—Ç */
        p, div, span {
            color: white !important;
        }
        
        /* –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è */
        .stSuccess {
            background-color: #1A472A !important;
            color: white !important;
            border: 1px solid #2E8B57 !important;
        }
        
        .stInfo {
            background-color: #1E3A5F !important;
            color: white !important;
            border: 1px solid #3B82F6 !important;
        }
        
        /* –ö–Ω–æ–ø–∫–∏ */
        .stButton button {
            background-color: #374151 !important;
            color: white !important;
            border: 1px solid #4B5563 !important;
        }
        
        .stButton button:hover {
            background-color: #4B5563 !important;
            border-color: #6B7280 !important;
        }
        
        /* –ü–æ–ª–µ –≤–≤–æ–¥–∞ - –ò–°–ü–†–ê–í–õ–ï–ù–û */
        .stTextInput input {
            background-color: #1F2937 !important;
            color: white !important;
            border: 1px solid #374151 !important;
        }
        
        .stTextInput input::placeholder {
            color: #9CA3AF !important;
        }
        
        .stTextInput input:focus {
            border-color: #60A5FA !important;
        }
        
        /* –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ - –ò–°–ü–†–ê–í–õ–ï–ù–û */
        .stFormSubmitButton button {
            background-color: #2563EB !important;
            color: white !important;
            border: 1px solid #3B82F6 !important;
        }
        
        .stFormSubmitButton button:hover {
            background-color: #1D4ED8 !important;
            border-color: #2563EB !important;
        }
        
        /* –°–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
        .user-message-dark {
            background: linear-gradient(135deg, #4A5568 0%, #2D3748 100%) !important;
            color: white !important;
            border: 1px solid #4A5568 !important;
        }
        
        /* –°–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ */
        .bot-message-dark {
            background: #374151 !important;
            color: white !important;
            border: 1px solid #4B5563 !important;
        }
        
        /* –í—Ä–µ–º—è —Å–æ–æ–±—â–µ–Ω–∏–π */
        .message-time-dark {
            color: #9CA3AF !important;
        }
        
        /* –ü–æ–¥–ø–∏—Å–∏ */
        .stCaption {
            color: #CCCCCC !important;
        }
        </style>
        """, unsafe_allow_html=True)
    else:
        # –°–≤–µ—Ç–ª–∞—è —Ç–µ–º–∞ (—Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—Ç–∏–ª–∏)
        st.markdown("""
        <style>
        .stApp {
            background-color: white;
        }
        .stFormSubmitButton button {
            background-color: #1E40AF !important;
            color: white !important;
        }
        </style>
        """, unsafe_allow_html=True)

def create_theme_toggle():
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã –∏ —Å–ø—Ä–∞–≤–∫–∏"""
    col1, col2, col3, col4, col5 = st.columns(5)
    
    with col4:
        # –ö–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∫–∏
        if st.button("‚ùì", key="help_toggle", help="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"):
            st.session_state.show_help = True
            
    with col5:
        # –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã
        theme_icon = "üåô" if not st.session_state.dark_theme else "‚òÄÔ∏è"
        if st.button(theme_icon, key="theme_toggle", help="–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É"):
            st.session_state.dark_theme = not st.session_state.dark_theme
            st.rerun()

def show_help_modal():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    if st.session_state.get('show_help', False):
        st.markdown("""
        <style>
        .help-modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
            z-index: 10000;
            border: 2px solid #3B82F6;
            max-width: 400px;
            width: 90%;
        }
        .help-modal.dark {
            background: #1F2937;
            color: white;
        }
        .help-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            z-index: 9999;
        }
        .close-btn {
            position: absolute;
            top: 10px;
            right: 10px;
            background: none;
            border: none;
            font-size: 20px;
            cursor: pointer;
            color: #6B7280;
        }
        </style>
        """, unsafe_allow_html=True)
        
        modal_class = "help-modal dark" if st.session_state.dark_theme else "help-modal"
        
        st.markdown(f"""
        <div class="help-overlay" onclick="document.getElementById('help-modal').style.display='none'">
            <div class="{modal_class}" id="help-modal">
                <button class="close-btn" onclick="this.parentElement.parentElement.style.display='none'">√ó</button>
                <h3>ü§ñ –û —á–∞—Ç-–±–æ—Ç–µ</h3>
                <p><strong>–í–µ—Ä—Å–∏—è:</strong> Alpha 1.0</strong></p>
                <p>–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —á–∞—Ç-–±–æ—Ç–∞ Canteen-X. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –∏–ª–∏ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.</p>
                <p><strong>–°–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏:</strong></p>
                <p>üì¢ –ù–∞—à Telegram: <em><a href="https://t.me/CanteenX1" target="_blank">–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª</a></em></p>
                <small>–ü—Ä–∏–Ω–æ—Å–∏–º –∏–∑–≤–∏–Ω–µ–Ω–∏—è –∑–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞! üõ†Ô∏è</small>
            </div>
        </div>
        """, unsafe_allow_html=True)
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –ø–æ–∫–∞–∑–∞ –ø–æ–º–æ—â–∏ –ø–æ—Å–ª–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        if st.button("–ó–∞–∫—Ä—ã—Ç—å", key="close_help"):
            st.session_state.show_help = False
            st.rerun()

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–º–æ—â–∏
    if 'show_help' not in st.session_state:
        st.session_state.show_help = False
    
    # –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —Ç–µ–º—ã –∏ —Å–ø—Ä–∞–≤–∫–∏
    create_theme_toggle()
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–º–æ—â–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    show_help_modal()
    
    # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Ç–µ–º—É
    setup_theme()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    if 'bot' not in st.session_state:
        st.session_state.bot = SmartBot()
    
    # –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞
    if 'messages' not in st.session_state:
        st.session_state.messages = []
        st.session_state.messages.append({
            "role": "bot", 
            "content": "–ü—Ä–∏–≤–µ—Ç! –Ø –ì—Ä–∏–≥–æ—Ä–∏–π ü§ñ\n–£–º–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ Canteen-X! –ú–æ–∂–µ–º:\n‚Ä¢ –û–±—â–∞—Ç—å—Å—è –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã üí¨\n‚Ä¢ –®—É—Ç–∏—Ç—å –∏ –±–æ–ª—Ç–∞—Ç—å üòÑ\n‚Ä¢ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –æ —Ç–µ–∫—É—â–µ–º —Å—Ç–∞—Ç—É—Å–µ —Å–µ—Ä–≤–∏—Å–∞ üõ†Ô∏è\n\n‚ö†Ô∏è <strong>–í–Ω–∏–º–∞–Ω–∏–µ:</strong> –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã - –º—ã —Ä–∞–±–æ—Ç–∞–µ–º –Ω–∞–¥ —É–ª—É—á—à–µ–Ω–∏–µ–º —Å–µ—Ä–≤–∏—Å–∞!",
            "time": datetime.now().strftime("%H:%M")
        })
    
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    col1, col2 = st.columns([3, 1])
    with col1:
        st.title("Canteen-X üí¨")
        st.subheader("–£–º–Ω—ã–π —á–∞—Ç —Å –ì—Ä–∏–≥–æ—Ä–∏–µ–º")
        st.caption("üöÄ –ê–ª—å—Ñ–∞-–≤–µ—Ä—Å–∏—è ‚Ä¢ –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã")
    with col2:
        st.markdown("<div style='text-align: center; font-size: 50px'>ü§ñ</div>", unsafe_allow_html=True)
    
    st.success("‚úÖ –ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –û–±—â–∞–π—Ç–µ—Å—å –Ω–∞ –ª—é–±—ã–µ —Ç–µ–º—ã!")
    
    # –ß–∞—Ç
    st.markdown("---")
    
    # –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–∞—Ç–∞
    chat_container = st.container()
    with chat_container:
        for msg in st.session_state.messages:
            is_dark = st.session_state.dark_theme
            
            if msg["role"] == "user":
                message_class = "user-message-dark" if is_dark else ""
                st.markdown(f"""
                <div style='display: flex; justify-content: flex-end; margin: 10px 0;'>
                    <div class='{message_class}' style='background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 12px 16px; border-radius: 18px 18px 0 18px; max-width: 70%; word-wrap: break-word;'>
                        {msg["content"]}
                        <div style='font-size: 0.7em; color: rgba(255,255,255,0.8); margin-top: 5px; text-align: right;'>{msg["time"]}</div>
                    </div>
                </div>
                """, unsafe_allow_html=True)
            else:
                message_class = "bot-message-dark" if is_dark else ""
                time_class = "message-time-dark" if is_dark else ""
                st.markdown(f"""
                <div style='display: flex; justify-content: flex-start; margin: 10px 0;'>
                    <div class='{message_class}' style='background: #f0f2f6; color: #1f2937; padding: 12px 16px; border-radius: 18px 18px 18px 0; max-width: 70%; word-wrap: break-word; border: 1px solid #e5e7eb;'>
                        {msg["content"].replace('\n', '<br>')}
                        <div class='{time_class}' style='font-size: 0.7em; color: #6b7280; margin-top: 5px;'>{msg["time"]}</div>
                    </div>
                </div>
                """, unsafe_allow_html=True)
    
    st.markdown("---")
    
    # –í–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è
    with st.form(key='chat_form', clear_on_submit=True):
        user_input = st.text_input(
            "–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
            placeholder="–°–ø—Ä–æ—Å–∏—Ç–µ –æ –µ–¥–µ, –ø–æ–±–æ–ª—Ç–∞–π—Ç–µ, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å...",
            label_visibility="collapsed",
            key="user_input"
        )
        col1, col2 = st.columns([3, 1])
        with col2:
            submit_button = st.form_submit_button(label='–û—Ç–ø—Ä–∞–≤–∏—Ç—å ‚û§', use_container_width=True)
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    if submit_button and user_input.strip():
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        st.session_state.messages.append({
            "role": "user",
            "content": user_input,
            "time": datetime.now().strftime("%H:%M")
        })
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        bot_response = st.session_state.bot.get_response(user_input)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –±–æ—Ç–∞
        st.session_state.messages.append({
            "role": "bot", 
            "content": bot_response,
            "time": datetime.now().strftime("%H:%M")
        })
        
        st.rerun()
    
    # –ë—ã—Å—Ç—Ä—ã–µ –∫–Ω–æ–ø–∫–∏
    st.markdown("**–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–ø—Ä–æ—Å–∏—Ç—å:**")
    cols = st.columns(2)
    topics = [
        ("üçï –ú–µ–Ω—é", "–º–µ–Ω—é"),
        ("üòä –ö–∞–∫ –¥–µ–ª–∞?", "–∫–∞–∫ –¥–µ–ª–∞"),
        ("üé≠ –®—É—Ç–∫–∞", "—à—É—Ç–∫–∞"),
        ("üí¨ –ü–æ–±–æ–ª—Ç–∞—Ç—å", "—á—Ç–æ –¥–µ–ª–∞–µ—à—å"),
        ("üïí –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã", "–≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã"),
        ("üöó –î–æ—Å—Ç–∞–≤–∫–∞", "–¥–æ—Å—Ç–∞–≤–∫–∞"),
        ("üí≥ –û–ø–ª–∞—Ç–∞", "–æ–ø–ª–∞—Ç–∞"),
        ("üì¶ –ó–∞–∫–∞–∑–∞—Ç—å", "—Ö–æ—á—É –∑–∞–∫–∞–∑–∞—Ç—å –ø–∏—Ü—Ü—É")
    ]
    
    for i, (btn_text, message) in enumerate(topics):
        with cols[i % 2]:
            if st.button(btn_text, use_container_width=True, key=f"btn_{i}"):
                st.session_state.messages.append({
                    "role": "user",
                    "content": message,
                    "time": datetime.now().strftime("%H:%M")
                })
                
                bot_response = st.session_state.bot.get_response(message)
                
                st.session_state.messages.append({
                    "role": "bot",
                    "content": bot_response,
                    "time": datetime.now().strftime("%H:%M")
                })
                
                st.rerun()
    
    # –°—Ç–∞—Ç—É—Å –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    st.markdown("---")
    col1, col2 = st.columns(2)
    
    with col1:
        if st.button("üßπ –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é", use_container_width=True):
            st.session_state.messages = []
            st.session_state.bot.conversation_history = []
            st.session_state.messages.append({
                "role": "bot",
                "content": "–ß–∞—Ç –æ—á–∏—â–µ–Ω! –°–ø—Ä–∞—à–∏–≤–∞–π —á—Ç–æ —É–≥–æ–¥–Ω–æ! –Ø –≥–æ—Ç–æ–≤! üéâ",
                "time": datetime.now().strftime("%H:%M")
            })
            st.rerun()
    
    with col2:
        st.info(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–π: {len(st.session_state.messages)}")

if __name__ == "__main__":
    main()
